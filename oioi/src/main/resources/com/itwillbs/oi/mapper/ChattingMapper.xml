<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.itwillbs.oi.mapper.ChattingMapper">

	<select id="selectReportCategory" resultType="hashmap">
		SELECT code, value
		FROM common
		WHERE hide != 'Y' AND name='REPORT_CATEGORY';
	</select>
	
	<select id="selectReviewCategory" resultType="hashmap">
		SELECT code, value
		FROM common
		WHERE hide != 'Y' AND name='REVIEW_CATEGORY';
	</select>
	
	<select id="getDeliveryinfo" resultType="hashmap">
		SELECT d.PC_ID, d.BUYER_ID, DV_TIME, DV_STATUS, cr.CR_ID
		FROM delivery d
		JOIN chat_room cr
		ON cr.PD_IDX = d.PC_ID
		WHERE PC_ID = #{PD_IDX}  
	</select>
	
	<insert id="insertReport">
		INSERT INTO report
		VALUES (
			NULL
			, #{TO_ID}
			, #{FROM_US_ID}
			, 'RS01'
			, #{RP_CATEGORY}
			, #{RP_CONTENT}
			, DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
			, #{RP_IMG1}
			, #{RP_IMG2}
		)
	</insert>
	
	<insert id="insertReview">
		INSERT INTO review
		VALUES (
			NULL
			,#{TO_US_ID}
			,#{FROM_US_ID}
			,#{RV_STAR}
			,#{RV_CATEGORYS}
			,#{RV_CONTENT}
			, DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
			,#{PD_IDX}	
		)
	</insert>
	
	<select id="selectReview" resultType="int">
		SELECT COUNT(RV_IDX)
		FROM review
		WHERE PD_IDX = #{PD_IDX}
	</select>
	
	<insert id="registDelivery">
		INSERT INTO delivery
		VALUES (
			NULL
			, #{BUYER_ID}
			, #{PC_ID}
			, #{DV_NUM}
			, #{DV_METHOD}
			, DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
			, 1
		)
	</insert>

	<insert id="createRoom">
		INSERT INTO chat_room
		VALUES (
			#{CR_ID}
			, #{PD_IDX}
			, #{TO_ID}
			, #{FROM_ID}
			, DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s')
			, 0
			, null
		)
	</insert>
	
	<select id="checkChat" resultType="int">
		SELECT COUNT(CR_ID) 
		FROM chat_room
		WHERE PD_IDX = #{PD_IDX}
			AND FROM_ID = #{FROM_ID}
			AND TO_ID = #{TO_ID}
			AND (status = 0 OR (status = 1 AND CR_EXIT_USER != #{FROM_ID})
	</select>
	
	<select id="getMyChatInfo" resultType="hashmap">
		-- ChttingMapper getMyChatInfo (채팅방 정보 가져오기);
		SELECT CR.CR_ID, CR.PD_IDX, CR.BUYER_ID, CR.SELLER_ID, u.US_NICK, u.US_PROFILE
		FROM chat_room CR
		JOIN user u
		  ON (CR.BUYER_ID = u.US_ID OR CR.SELLER_ID = u.US_ID)
		WHERE (CR.BUYER_ID = #{US_ID} OR CR.SELLER_ID = #{US_ID})
		  AND (status = 0 OR (status = 1 AND CR_EXIT_USER != #{US_ID}))
		  AND u.US_ID != #{US_ID}
		ORDER BY CR.CR_DATE DESC;
	</select>
	
	<select id="getMyChatList" resultType="hashmap">
	<![CDATA[
		SELECT MS_CONTENT
			,  CASE 
		        WHEN TIMESTAMPDIFF(MINUTE, MS_DATE, NOW()) < 1 THEN CONCAT(TIMESTAMPDIFF(SECOND, MS_DATE, NOW()), ' 초전')
		        WHEN TIMESTAMPDIFF(HOUR, MS_DATE, NOW()) < 1 THEN CONCAT(TIMESTAMPDIFF(MINUTE, MS_DATE, NOW()), ' 분전')
		        WHEN TIMESTAMPDIFF(HOUR, MS_DATE, NOW()) < 24 THEN CONCAT(TIMESTAMPDIFF(HOUR, MS_DATE, NOW()), ' 시간전')
		        ELSE CONCAT(TIMESTAMPDIFF(DAY, MS_DATE, NOW()), ' 일전')
		    END AS MS_END_DATE
		FROM chat_message
		WHERE CR_ID = #{crId}
		ORDER BY MS_DATE desc
		LIMIT 1;
	 ]]>
	</select>
	
	<select id="existmsg" resultType="hashmap">
		SELECT COUNT(MS_CONTENT) AS cnt
		FROM chat_message
		WHERE CR_ID = #{CR_ID}
	</select>
	
	<select id="getReadCount" resultType="hashmap">
		SELECT CM_READCOUNT, CM_READBY
		FROM chat_message
		WHERE CR_ID = #{crId}
	</select>
	
	<select id="getUnreadCnt" resultType="hashmap">
		SELECT CM_READCOUNT
		FROM chat_message
		WHERE CR_ID = #{CR_ID}
	</select>
	
	<update id="updateUnreadZero">
		UPDATE chat_message
		SET CM_READCOUNT = 0
		WHERE CR_ID = #{CR_ID} AND CM_READBY != #{US_ID}
	</update>
	
	<update id="updateFreshness">
		UPDATE user
		SET US_OILEVEL = US_OILEVEL + #{freshness}
		WHERE US_ID = #{TO_US_ID}
	</update>
	
	<select id="getChatRoom" resultType="map">
	-- ChattingMapper getChatRoom (채팅방 가져오기)
	SELECT CR_ID
	FROM chat_room
	WHERE PD_IDX = #{PD_IDX}
	  AND (
	    (BUYER_ID = #{TO_ID} AND SELLER_ID = #{FROM_ID})
	    OR (BUYER_ID = #{FROM_ID} AND SELLER_ID = #{TO_ID})
	  );
	</select>
	
	<select id="getProductInfo" resultType="hashmap">
	-- ChattingMapper getProductInfo (상품정보 가져오기)
		SELECT 
			 p.PD_IDX
			, p.PD_SUBJECT
			, p.PD_STATUS
			, p.PD_PRICE
		FROM product p
		WHERE p.PD_IDX = #{PD_IDX}
	</select>
	
	<select id="getOtherInfo" resultType="hashmap">
	-- ChattingMapper getOtherInfo (상대방 정보 가져오기)
		SELECT US_PROFILE, US_NICK, US_OILEVEL
		FROM user
		WHERE US_ID = #{TO_ID}
	</select>
	
	<select id="getMyInfo" resultType="hashmap">
	-- ChattingMapper getOtherInfo (내 정보 가져오기)
		SELECT u.US_PROFILE
		FROM `user` u
		WHERE u.US_ID = #{FROM_ID}
	</select>
	
	<select id="getChatMsg" resultType="hashmap">
	-- ChattingMapper getChatMsg (채팅방 메세지 가져오기)
        SELECT MS_CONTENT
	       , TO_ID
	       , FROM_ID
	       , SUBSTRING(MS_DATE, 12, 5) AS 'MS_TIME'
	      , CASE 
	         WHEN FROM_ID = #{US_ID} THEN 'right'
	         WHEN TO_ID = #{TO_ID} THEN 'left' ELSE 'left'
	       END AS MSG_POSITION
	     , CASE 
	         WHEN FROM_ID = #{US_ID} THEN 'other'
	         WHEN TO_ID = #{TO_ID} THEN 'my' ELSE 'my'
	       END AS MSG_IMG_POSITION
			FROM chat_message
			WHERE CR_ID = #{CR_ID}
	</select>
	
	<insert id="saveChatting">
		-- ChattingMapper saveChatting (채팅방 메세지 저장하기)
		INSERT INTO chat_message
		VALUES (
			NULL	
			, #{CR_ID}
			, #{FROM_ID}
			, #{TO_ID}
			, DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
			, #{msg}
			, 1
			, #{FROM_ID}
		)
	</insert>
	
	<select id="getUserRole" resultType="map">
		SELECT BUYER_ID, SELLER_ID
		FROM chat_room
		WHERE CR_ID = #{CR_ID}
	</select>
	
	<select id="getMyTradeInfo" resultType="int">
		SELECT COUNT(CR_ID)
		FROM trade
		WHERE CR_ID = #{CR_ID}
	</select>
	
	<select id="eventDelivery" resultType="int">
		SELECT COUNT(DV_STATUS)
		FROM delivery d 
		JOIN trade t 
		ON d.PC_ID = t.TD_PD_IDX AND d.BUYER_ID = t.TD_BUYER_ID 
		WHERE DV_STATUS = 2 AND d.BUYER_ID = #{TO_ID} AND PC_ID = #{PD_IDX}
	</select>
	
	<update id="updateDelivery">
		UPDATE delivery
		SET DV_STATUS = 3
		WHERE DV_STATUS = 2 AND BUYER_ID = #{BUYER_ID} AND PC_ID = #{PD_IDX}
	</update>
	
	<select id="getRemoveRoomStatus" resultType="int">
		SELECT STATUS
		FROM chat_room
		WHERE CR_ID = #{CR_ID}
	</select>
	
	<update id="removerRoom">
		UPDATE chat_room
		SET status = 1,
    		CR_EXIT_USER = #{FROM_ID}
		WHERE CR_ID = #{CR_ID}
	</update>
	
	<update id="statusTwoRemove">
		UPDATE chat_room
		SET status = 2
		WHERE CR_ID = #{CR_ID} AND CR_EXIT_USER != #{FROM_ID}
	</update>
</mapper>