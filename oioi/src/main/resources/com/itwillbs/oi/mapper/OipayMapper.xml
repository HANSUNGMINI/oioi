<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
CREATE TABLE bank_user_info (
	id VARCHAR(16) PRIMARY KEY,
	access_token VARCHAR(400) UNIQUE,
	refresh_token VARCHAR(400) UNIQUE,
	user_seq_no VARCHAR(10) UNIQUE,
	user_ci VARCHAR(100) UNIQUE,
	FOREIGN KEY (id) REFERENCES member(id) ON DELETE CASCADE
);
-->
<mapper namespace="com.itwillbs.oi.mapper.OipayMapper">
	
	<!-- 사용자 아이디 조회 - SELECT -->
	<!-- 전달받은 Map 객체 내의 "id" 속성으로 아이디가 저장되어 있음 -->
	<select id="selectId" resultType="string">
		SELECT BUI_ID
		FROM bank_user_info
		WHERE BUI_ID = #{id}
	</select>
	
	<!-- 핀테크 엑세스토큰 정보 등록 - INSERT -->
	<!-- id, access_token, refresh_token, user_seq_no, user_ci 값 저장 -->
	<!-- 전달받은 Map 객체 내의 "id" 속성으로 아이디가 저장되어 있음 -->
	<!-- 전달받은 Map 객체 내의 "token" 속성으로 ReponseTokenVO 객체가 저장되어 있음 -->
	<insert id="insertAccessToken">
		INSERT
		INTO bank_user_info
		VALUES (
			#{id}
			, #{token.access_token}
			, #{token.refresh_token}
			, #{token.user_seq_no}
			, null -- user_ci 값은 null 값 전달
		)
	</insert>
	
	<!-- 핀테크 엑세스토큰 정보 갱신 - UPDATE -->
	<!-- 아이디가 일치하는 레코드의 access_token, refresh_token, user_seq_no 값 수정 -->
	<update id="updateAccessToken">
		UPDATE bank_user_info
		   SET BUI_ACCESS_TOKEN = #{token.access_token}
			 , BUI_REFRESH_TOKEN = #{token.refresh_token}
			 , BUI_USER_SEQ_NO = #{token.user_seq_no}
		 WHERE 1 = 1
		   AND BUI_ID = #{id}
	</update>
	
	<select id="selectBankAccessToken" resultType="string">
		SELECT BUI_ACCESS_TOKEN
	      FROM bank_user_info
		 WHERE BUI_ID = #{userId}
	</select>
	
	<select id="selectBankUserInfo" resultType="map">
		SELECT bui.* 
			 , u.US_OIMONEY 
		FROM bank_user_info bui JOIN `user` u
		ON bui.BUI_ID = u.US_ID 
		WHERE BUI_ACCESS_TOKEN = #{access_token}
	</select>
	
	<update id="updateChargeOimoney">
		UPDATE user
		SET
			US_OIMONEY = US_OIMONEY + #{amtInput}
		WHERE
			US_ID = #{id}
	</update>
	
	<select id="selectTradePDInfo" resultType="map">
		SELECT
			p.PD_SUBJECT
			, p.PD_PRICE
			, p.PD_IMAGE
			, p.US_ID
			, c.value AS PD_STATUS
			, i.image1
	        , i.image2
	        , i.image3
	        , i.image4
	        , i.image5
		FROM 
	        product p
		LEFT JOIN 
	        images i ON p.PD_IMAGE = i.IMG_IDX
        LEFT JOIN 
    		common c ON p.PD_STATUS = c.code AND c.name = 'PD_STATUS'
	    WHERE 
	    	PD_IDX = #{PD_IDX}
	</select>
	
	<select id="selectOiMoney" resultType="int">
		SELECT US_OIMONEY
		FROM user
		WHERE US_ID = #{id}
	</select>
	
	<update id="updatePdStatus">
		UPDATE product
		SET PD_STATUS = 'PDS02'
		WHERE PD_IDX = #{PD_IDX}
	</update>
	
	<update id="updatePdStatus2">
		UPDATE product
		SET PD_STATUS = 'PDS03'
		WHERE PD_IDX = #{PD_IDX}
	
	</update>
	
	<update id="updateMinusOimoney">
		UPDATE user
		SET US_OIMONEY = US_OIMONEY - #{PD_PRICE}
		WHERE US_ID = #{US_ID}
	</update>
	
	<select id="getChatRoomNum" resultType="String">
		SELECT CR_ID
		FROM chat_room
		WHERE PD_IDX = #{PD_IDX}
			AND SELLER_ID = #{TO_ID}
	</select>
	
	<insert id="insertTDinfo">
		INSERT INTO trade
		VALUES (
			null
			, null
			, #{PD_IDX}
			, #{TO_ID}
			, #{US_ID}
			, DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
			, #{PD_PRICE}
			, null -- 주소
			, null -- 모름
			, #{CR_ID}
		)
	</insert>
	
	<update id="updatePlusOimoney">
		UPDATE user
		SET US_OIMONEY = US_OIMONEY + #{PD_PRICE}
		WHERE US_ID = #{SELLER_ID}
	</update>
	
	<update id="updateRefundOimoney">
		UPDATE user
		SET US_OIMONEY = US_OIMONEY - #{amtInput}
		WHERE US_ID = #{SELLER_ID}
	</update>
	
	<!-- 관리자 엑세스토큰 정보 조회 - SELECT -->
	<!-- WHERE 절의 id 는 "admin" 고정 -->
	<select id="selectAdminToken" resultType="string">
		SELECT access_token
		FROM bank_user_info
		WHERE id = 'admin'
	</select>
	
	
<!-- 	<select id="selectBankUserInfo" resultType="bankUserInfo"> -->
<!-- 		SELECT * -->
<!-- 		FROM bank_user_info as b -->
<!-- 		LEFT JOIN member AS m -->
<!-- 		ON b.id = m.id -->
<!-- 		WHERE b.id = #{id} -->
<!-- 	</select> -->



	
</mapper>














