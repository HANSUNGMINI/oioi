<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.itwillbs.oi.mapper.AuctionMapper">
	<select id="getCategory1">
		select CTG_CODE,CTG_NAME
		from category
		where UP_CTG_CODE = 'T';
	</select>
	
	<select id="getCategory2">
		select *
		from category
		where UP_CTG_CODE like '_000';
	</select>
	
	<select id="getCategory3">
		SELECT *
		FROM category
		WHERE UP_CTG_CODE LIKE '__00';
	</select>
	
	<select id="getCate1Edit">
		SELECT CTG_CODE
			 , CTG_NAME
			 , CASE WHEN a.PD_CATEGORY IS NULL THEN ''
			 								   ELSE 'selected' END AS SELECTED 
		  from category c
		  LEFT JOIN (SELECT RPAD(LEFT(PD_CATEGORY, 1), 4, '0') AS PD_CATEGORY
				  FROM product p 
				 WHERE PD_IDX = #{PD_IDX}) a
			ON c.CTG_CODE = a.PD_CATEGORY
		 where UP_CTG_CODE = 'T'
	</select>
	
	<select id="getCate2Edit">
	WITH TMP AS (
	SELECT RPAD(LEFT(PD_CATEGORY, 1), 4, '0') AS BIG
		 , RPAD(LEFT(PD_CATEGORY, 2), 4, '0') AS MD
	   FROM product P 
	  WHERE PD_IDX = #{PD_IDX}	
	)
	SELECT C.*
		 , CASE WHEN T.MD IS NULL THEN ''
		 						  ELSE 'selected' END AS SELECTED
	  from category C
	  LEFT JOIN TMP T
		ON C.CTG_CODE = T.MD		  
	 where 1=1
	   AND UP_CTG_CODE = (SELECT BIG FROM TMP)
	</select>
	
	<select id="getCate3Edit">
	WITH TMP AS (
	SELECT RPAD(LEFT(PD_CATEGORY, 2), 4, '0') AS MD
		 , PD_CATEGORY AS SM
	   FROM product p 
	  WHERE PD_IDX = #{PD_IDX}	
	)
	SELECT C.*
		 , CASE WHEN T.SM IS NULL THEN ''
		 						  ELSE 'selected' END AS SELECTED
	  FROM category C
	  LEFT JOIN TMP T
	    ON C.CTG_CODE = T.SM
	 WHERE 1=1
	   AND UP_CTG_CODE = (SELECT MD FROM TMP)
	</select>
	
	<insert id="insertImg" parameterType="map" useGeneratedKeys="true" keyProperty="imgIdx" keyColumn="IMG_IDX">
		INSERT INTO images
	    (
	        image1,
	        image2,
	        image3,
	        image4,
	        image5
	    )
	    VALUES
	    (
	        <choose>
	            <when test="#{image1} != null">#{image1}</when>
	            <otherwise>null</otherwise>
	        </choose>,
	        <choose>
	            <when test="#{image2} != null">#{image2}</when>
	            <otherwise>null</otherwise>
	        </choose>,
	        <choose>
	            <when test="#{image3} != null">#{image3}</when>
	            <otherwise>null</otherwise>
	        </choose>,
	        <choose>
	            <when test="#{image4} != null">#{image4}</when>
	            <otherwise>null</otherwise>
	        </choose>,
	        <choose>
	            <when test="#{image5} != null">#{image5}</when>
	            <otherwise>null</otherwise>
	        </choose>
	    )
	</insert>
	
	<select id="categoryName" resultType="string">
		SELECT CTG_NAME
		FROM category
		WHERE CTG_CODE IN (#{cate1}, #{cate2}, #{cate3});
	</select>
	
	<insert id="insertAPD">
		INSERT
		INTO auction_product(
			APD_OWNER,
		    APD_NAME,
		    APD_DETAIL,
		    APD_CATEGORY,
		    APD_IMAGE,
		    APD_STATUS,
		    APD_DEADLINE,
		    APD_CONDITION,
		    APD_START_PRICE,
		    APD_BUY_NOW_PRICE,
		    APD_REG_DATE,
		    APD_MAIN_IMAGE
		)
		VALUES(
			#{APD_OWNER},
			#{APD_NAME},
			#{APD_DETAIL},
			#{APD_CATEGORY},
			#{APD_IMAGE},
			'APD01',
			#{APD_DEADLINE},
			#{APD_CONDITION},
			#{APD_START_PRICE},
			#{APD_BUY_NOW_PRICE},
			DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),
			#{APD_MAIN_IMAGE}		
		)
	</insert>
	
	<select id="selectApdList" resultType="hashmap">
		<![CDATA[
		SELECT *,
		CASE
			WHEN ap.APD_STATUS = 'APD09' THEN 'overlay'
			WHEN ap.APD_STATUS = 'APD08' THEN 'overlay'
			WHEN ap.APD_STATUS = 'APD07' THEN 'overlay'
			WHEN ap.APD_STATUS = 'APD06' THEN 'overlay'
			WHEN ap.APD_STATUS = 'APD05' THEN 'non_overlay' 
		END AS APD_STATUS_COLOR,
		CASE 
			WHEN TIMESTAMPDIFF(MINUTE, a.AT_START_TIME, NOW()) < 1 THEN CONCAT(TIMESTAMPDIFF(SECOND, a.AT_START_TIME, NOW()), ' 초전')
			WHEN TIMESTAMPDIFF(HOUR, a.AT_START_TIME, NOW()) < 1 THEN CONCAT(TIMESTAMPDIFF(MINUTE, a.AT_START_TIME, NOW()), ' 분전')
			WHEN TIMESTAMPDIFF(HOUR, a.AT_START_TIME, NOW()) < 24 THEN CONCAT(TIMESTAMPDIFF(HOUR, a.AT_START_TIME, NOW()), ' 시간전')
			ELSE CONCAT(TIMESTAMPDIFF(DAY, a.AT_START_TIME, NOW()), ' 일전')
		END AS RD_DATE
		FROM auction_product ap
		JOIN images img ON ap.APD_IMAGE = img.IMG_IDX
		JOIN common c ON ap.APD_STATUS = c.code
		JOIN auction a ON ap.APD_IDX = a.APD_IDX
		]]>
		<if test="params.APD_STATUS == ''">
		WHERE APD_STATUS LIKE 'APD0%'
		AND SUBSTRING(APD_STATUS, 4, 2) BETWEEN '05' AND '09'
		</if>
		<if test="params.APD_STATUS == 'APD05'">
		WHERE APD_STATUS = 'APD05'
		</if>
		<if test="params.APD_STATUS == 'APD06'">
		WHERE APD_STATUS = 'APD06'
		</if>
		<if test="params.APD_STATUS == 'APD07'">
		WHERE APD_STATUS = 'APD07'
		</if>
		LIMIT #{params.startRow}, #{params.listLimit}
		
	</select>
	
	<select id="selectApdDetail" resultType="hashmap">
		WITH RECURSIVE tmp(CTG_CODE, CTG_NAME, UP_CTG_CODE, path) AS (
		  SELECT CTG_CODE, CTG_NAME, UP_CTG_CODE, CTG_NAME
		  FROM category
		  WHERE UP_CTG_CODE = 'T'
		  UNION ALL
		  SELECT t.CTG_CODE, t.CTG_NAME, t.UP_CTG_CODE, CONCAT(tp.path, '/', t.CTG_NAME)
		  FROM category t
		  INNER JOIN tmp tp ON t.UP_CTG_CODE = tp.CTG_CODE
		)
		select 
			ap.APD_IDX,
            ap.APD_OWNER,
            ap.APD_NAME,
            ap.APD_DETAIL,
            tmp.PATH AS APD_CATEGORY,
            i.image1,
            i.image2,
            i.image3,
            i.image4,
            i.image5,
            ap.APD_STATUS,
            ap.APD_REJECTION,
            ap.APD_DEADLINE,
            ap.APD_CONDITION,
            ap.APD_START_PRICE,
            ap.APD_BUY_NOW_PRICE,
            ap.APD_REG_DATE,
            ap.APD_MAIN_IMAGE,
            a.AT_IDX,
            a.AT_START_TIME,
            a.AT_END_TIME,
            a.FINAL_BID_USER,
            a.FINAL_BID_PRICE
		from auction_product ap
		join images i
		on ap.APD_IMAGE = i.IMG_IDX
		join auction a
		on ap.APD_IDX = a.APD_IDX
		JOIN tmp
		on ap.APD_CATEGORY = tmp.CTG_CODE
		where ap.APD_IDX = #{APD_IDX};
	</select>
	
	<select id="selectACR" resultType="String">
		select ACR_IDX
		from auction_chat_room
		where APD_IDX = #{APD_IDX}	
	</select>
	<insert id="insertACR" useGeneratedKeys="true" keyProperty="ACR_IDX">
	    insert into auction_chat_room(ACR_STATUS,ACR_DATE,APD_IDX)
	    values ('Y', DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), #{APD_IDX})
	</insert>
	<update id="updateApdBid">
		update auction
		set FINAL_BID_USER = #{FINAL_BID_USER}, FINAL_BID_PRICE = #{FINAL_BID_PRICE}
		where APD_IDX = #{APD_IDX};
	</update>
	<update id="updateApdStatus">
		update auction_product
		set APD_STATUS = "APD06"
		where APD_IDX = #{APD_IDX}
	</update>
	
	<insert id="insertACM">
		insert into auction_chat_msg(
			ACR_IDX,
		    ACM_USER,
		    ACM_CONTENT,
		    ACM_DATE
		)values(
			#{ACR_IDX},
		    #{ACM_USER},
		    #{ACM_CONTENT},
		    DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
		)
	</insert>
	
	<insert id="insertBid">
		insert into bidding(
			APD_IDX,
			BID_USER,
		    BID_PRICE,
		    BID_TIME
		)values(
			#{APD_IDX},
		    #{FINAL_BID_USER},
		    #{FINAL_BID_PRICE},
		    DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
		)
	</insert>
	<select id="selectBidChart" resultType="hashmap">
		select BID_PRICE, DATE_FORMAT(BID_TIME, '%m월%d일') as BID_TIME
		from bidding
		where APD_IDX = #{APD_IDX};
	</select>
	
	<select id="selectNewAuction" resultType="map">
		SELECT a.AT_IDX
			 , apd.APD_IDX
			 , apd.APD_NAME
		     , apd.APD_REG_DATE
		     , apd.APD_START_PRICE
		     , apd.APD_BUY_NOW_PRICE
		     , i.image1 AS APD_IMAGE
		FROM auction a
		LEFT JOIN auction_product apd
		  ON a.APD_IDX = apd.APD_IDX
		LEFT JOIN images i
		  ON apd.APD_IMAGE  = i.IMG_IDX
		WHERE AT_IDX = (SELECT max(AT_IDX) FROM auction a2)
	</select>
	
	<select id="apdPopular" resultType="hashmap">
	<![CDATA[
		SELECT ap.*, COUNT(b.APD_IDX) AS bid_count,
		CASE
			WHEN ap.APD_STATUS = 'APD09' THEN 'overlay'
			WHEN ap.APD_STATUS = 'APD08' THEN 'overlay'
			WHEN ap.APD_STATUS = 'APD07' THEN 'overlay'
			WHEN ap.APD_STATUS = 'APD06' THEN 'overlay'
			WHEN ap.APD_STATUS = 'APD05' THEN 'non_overlay' 
		END AS APD_STATUS_COLOR,
		CASE 
			WHEN TIMESTAMPDIFF(MINUTE, ap.APD_REG_DATE, NOW()) < 1 THEN CONCAT(TIMESTAMPDIFF(SECOND, ap.APD_REG_DATE, NOW()), ' 초전')
			WHEN TIMESTAMPDIFF(HOUR, ap.APD_REG_DATE, NOW()) < 1 THEN CONCAT(TIMESTAMPDIFF(MINUTE, ap.APD_REG_DATE, NOW()), ' 분전')
			WHEN TIMESTAMPDIFF(HOUR, ap.APD_REG_DATE, NOW()) < 24 THEN CONCAT(TIMESTAMPDIFF(HOUR, ap.APD_REG_DATE, NOW()), ' 시간전')
			ELSE CONCAT(TIMESTAMPDIFF(DAY, ap.APD_REG_DATE, NOW()), ' 일전')
		END AS RD_DATE,
		c.value as APD_STATUS_VALUE
		FROM auction_product ap
		JOIN bidding b
		ON ap.APD_idx = b.APD_IDX
		JOIN common c
		on ap.APD_STATUS = c.code
		GROUP BY ap.APD_idx, c.value
		ORDER BY bid_count DESC
		limit 5
		]]>
	</select>
	
	<update id="updateApdBuyStatus">
		UPDATE auction_product
		SET APD_STATUS = 'APD07'
		WHERE APD_IDX = #{APD_IDX}
	</update>
	
	<update id="updateApdBuyOiMoney">
		UPDATE user
    	SET US_OIMONEY = CAST(US_OIMONEY AS SIGNED) - CAST(#{FINAL_BID_PRICE} AS SIGNED)
    	WHERE US_ID = #{Buyer}
	</update>
	
	<select id="getRecentLookProduct" resultType="hashmap">
			<![CDATA[
		-- MainMapper > getRecentLookProduct
		SELECT APD_IDX, 
		    APD_NAME, 
		    APD_START_PRICE, 
		    APD_BUY_NOW_PRICE, 
		    APD_MAIN_IMAGE,
		    c.value AS 'APD_STATUS_VALUE',
		    CASE
		        WHEN APD_STATUS = 'APD05' THEN 'non_overlay'
		        WHEN APD_STATUS = 'APD06' THEN 'overlay'
		        WHEN APD_STATUS = 'APD07' THEN 'overlay' 
		    END AS APD_STATUS_COLOR,
		    CASE 
		        WHEN TIMESTAMPDIFF(MINUTE, APD_REG_DATE, NOW()) < 1 THEN CONCAT(TIMESTAMPDIFF(SECOND, APD_REG_DATE, NOW()), ' 초전')
		        WHEN TIMESTAMPDIFF(HOUR, APD_REG_DATE, NOW()) < 1 THEN CONCAT(TIMESTAMPDIFF(MINUTE, APD_REG_DATE, NOW()), ' 분전')
		        WHEN TIMESTAMPDIFF(HOUR, APD_REG_DATE, NOW()) < 24 THEN CONCAT(TIMESTAMPDIFF(HOUR, APD_REG_DATE, NOW()), ' 시간전')
		        ELSE CONCAT(TIMESTAMPDIFF(DAY, APD_REG_DATE, NOW()), ' 일전')
		    END AS ARD_DATE
		 FROM auction_product ap
		 JOIN common c
		 ON ap.APD_STATUS = c.code
		 WHERE APD_IDX = #{prodcut}
		 ]]>
	</select>
	<select id="getOiMoney" resultType="String">
		select US_OIMONEY
		from user
		where US_ID = #{US_ID}
	</select>
	
	
	
	<!-- MAIN 옥션 배너 -->
	<select id="" resultType="map">
		select ap.APD_NAME
		     , ap.APD_BUY_NOW_PRICE
		     , ap.APD_MAIN_IMAGE
		     , a.AT_END_TIME
		     , a.FINAL_BID_PRICE
		  FROM auction_product ap
		  LEFT JOIN auction a ON ap.APD_IDX = a.APD_IDX
		 WHERE AT_MAIN = 'Y';
	</select>
	<select id="selectAddress" resultType="string">
		SELECT CONCAT(US_ADDRESS1, ' ', US_ADDRESS2) AS ADDRESS
		FROM user
		WHERE US_ID = #{US_ID};
	</select>
	<insert id="insertApdTrade">
		insert into trade(
			TD_APD_IDX,
		    TD_SELLER_ID,
		    TD_BUYER_ID,
		    TD_TIME,
		    TD_BUYER_ADDRESS
		)values(
			#{APD_IDX},
		    #{TD_SELLER_ID},
		    #{Buyer},
		    DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),
		    #{TD_BUYER_ADDRESS}
		);	
	</insert>
	<select id="selectProfile">
		select US_PROFILE
		from user
		where US_ID = #{US_ID}
	</select>
	
	<select id="selectReportMsg" resultType="map">
		select concat("채팅내용 : ",acm.ACM_CONTENT,", 채팅한 날짜 : ",acm.ACM_DATE) as ACM_CONTENT
		from auction_chat_msg acm
		join auction_chat_room acr
		on acm.ACR_IDX = acr.ACR_IDX
		where acr.APD_IDX = #{ACR_IDX} and acm.ACM_USER = #{ACM_USER};
	</select>
	
	<select id="selectUserInfo" resultType="map">
		select US_PROFILE,US_NICK
		from user
		where US_ID = #{US_ID}
	</select>
	<update id="updateEndApd">
		update auction_product
		set APD_STATUS = 'APD09'
		where APD_IDX = #{APD_IDX}
	</update>
</mapper>















