<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.itwillbs.oi.mapper.TradeMapper">
	<select id="selectProductCondition">
		select name , code , value  
		from common c 
		where name = 'PD_CONDTION';
	</select>
	
	<select id="selectTradeMethod">
		select name , code , value  
		from common c 
		where name = 'PD_METHOD';
	</select>
	
	<select id="selectProductPriceOffer">
		SELECT name , code , value  
		FROM common c 
		WHERE name = 'PD_PRICE_OFFER';
	</select>
	
	<select id="selectProductSafeTrade">
		SELECT name , code , value  
		FROM common c 
		WHERE name = 'PD_SAFE_TRADE';
	</select>
	
	<insert id="insertProduct" >
		 INSERT INTO product 
		 VALUES (
			  NULL -- PD_IDX
            , #{US_ID} -- US_ID
            , #{PD_CATEGORY} -- PD_CATEGORY
            , #{PD_SUBJECT} -- PD_SUBJECT
            , #{PD_CONTENT} -- PD_CONTENT
            , #{PD_IMAGE} -- PD_IMAGE
            , #{PD_PRICE} -- PD_PRICE
            , #{PD_PRICE_OFFER} -- PD_PRICE_OFFER
            , #{PD_STATUS} -- PD_STATUS 
            , #{PD_CONDITION} -- PD_CONDITION
            , #{PD_TRADE_METHOD} -- PD_TRADE_METHOD
            , #{PD_SAFE_TRADE} -- PD_SAFE_TRADE
            , DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i') -- PD_REG_DATE
            , DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i') -- PD_UPDATED_DATE
            , 0 -- PD_READCOUNT
            , #{PD_TEMP_SAVE} -- PD_TEMP_SAVE
            , #{PD_TAG1} -- PD_TAG1
            , #{PD_TAG2} -- PD_TAG2
            , #{PD_TAG3} -- PD_TAG3
            , #{PD_TAG4} -- PD_TAG4
            , #{PD_TAG5} -- PD_TAG5
            , (SELECT US_LAT FROM user WHERE US_ID = #{US_ID})
            , (SELECT US_LNG FROM user WHERE US_ID = #{US_ID})
        );
	</insert>
	
	<select id="selectProduct">
		SELECT * 
		FROM product p 
		JOIN images i
		ON p.PD_IMAGE = i.IMG_IDX
		ORDER BY PD_IDX DESC 
	</select>
	
<!-- 	<select id="selectProductInfo" resultType="hashmap"> -->
<!-- 		SELECT * -->
<!-- 		FROM product p -->
<!-- 		JOIN images i -->
<!-- 		ON p.PD_IMAGE = i.IMG_IDX -->
<!-- 		WHERE PD_IDX = #{PD_IDX}; -->
<!-- 	</select> -->
	<select id="selectProductInfo" resultType="hashmap">
	 WITH RECURSIVE tmp(CTG_CODE, CTG_NAME, UP_CTG_CODE, path) AS (
		  SELECT CTG_CODE, CTG_NAME, UP_CTG_CODE, CTG_NAME
		  FROM category
		  WHERE UP_CTG_CODE = 'T'
		  UNION ALL
		  SELECT t.CTG_CODE, t.CTG_NAME, t.UP_CTG_CODE, CONCAT(tp.path, '/', t.CTG_NAME)
		  FROM category t
		  INNER JOIN tmp tp ON t.UP_CTG_CODE = tp.CTG_CODE
		)
	 SELECT 
        p.PD_IDX,
        p.US_ID,
        tmp.PATH AS PD_CATEGORY, 
        p.PD_SUBJECT,
        p.PD_CONTENT,
        p.PD_IMAGE,
        p.PD_PRICE,
        cp1.value AS PD_PRICE_OFFER,
        cp2.value AS PD_STATUS,
        cp3.value AS PD_CONDITION,
        cp4.value AS PD_TRADE_METHOD,
        cp5.value AS PD_SAFE_TRADE,
        p.PD_REG_DATE,
        p.PD_UPDATED_DATE,
        p.PD_READCOUNT,
        p.PD_TEMP_SAVE,
        p.PD_TAG1,
        p.PD_TAG2,
        p.PD_TAG3,
        p.PD_TAG4,
        p.PD_TAG5,
        i.image1,
        i.image2,
        i.image3,
        i.image4,
        i.image5,
        (SELECT CASE WHEN COUNT(*) = 0 THEN ''
									  ELSE 'active' END AS wish_yn
          FROM wish_list wl
		 WHERE 1=1
           AND WL_PD_IDX = p.PD_IDX
           AND WL_US_ID = #{US_ID}) AS wish_yn
    FROM 
        product p
    LEFT JOIN 
        common cp1 ON p.PD_PRICE_OFFER = cp1.code AND cp1.name = 'PD_PRICE_OFFER'
    LEFT JOIN 
        common cp2 ON p.PD_STATUS = cp2.code AND cp2.name = 'PD_STATUS'
    LEFT JOIN 
        common cp3 ON p.PD_CONDITION = cp3.code AND cp3.name = 'PD_CONDTION'
    LEFT JOIN 
        common cp4 ON p.PD_TRADE_METHOD = cp4.code AND cp4.name = 'PD_METHOD'
    LEFT JOIN 
        common cp5 ON p.PD_SAFE_TRADE = cp5.code AND cp5.name = 'PD_SAFE_TRADE'
    LEFT JOIN 
        images i ON p.PD_IMAGE = i.IMG_IDX
    LEFT JOIN 
    	tmp ON p.PD_CATEGORY = tmp.CTG_CODE
    WHERE 
        p.PD_IDX = #{PD_IDX}
    ORDER BY 
        p.PD_UPDATED_DATE;
	</select>
	
	<select id="getProductStatus">
		select name , code , value  
		from common c 
		where name = 'PD_STATUS';
	</select>
	
	<update id="updateReadCount">
		UPDATE product
		SET PD_READCOUNT = PD_READCOUNT + 1
		WHERE PD_IDX = #{pd_idx}
	</update>
	
	<select id="selectFilteredProducts" resultType="map">
	    WITH RECURSIVE tmp(CTG_CODE, CTG_NAME, UP_CTG_CODE, path) AS (
	        SELECT CTG_CODE, CTG_NAME, UP_CTG_CODE, CTG_NAME
	        FROM category
	        WHERE UP_CTG_CODE = 'T'
	        UNION ALL
	        SELECT t.CTG_CODE, t.CTG_NAME, t.UP_CTG_CODE, CONCAT(tp.path, '/', t.CTG_NAME)
	        FROM category t
	        INNER JOIN tmp tp ON t.UP_CTG_CODE = tp.CTG_CODE
	    )
	    SELECT 
	        p.PD_IDX,
	        p.US_ID,
	        CONCAT_WS('/', c1.CTG_NAME, c2.CTG_NAME, c3.CTG_NAME) AS PD_CATEGORY,
	        p.PD_SUBJECT,
	        p.PD_CONTENT,
	        p.PD_IMAGE,
	        p.PD_PRICE,
	        cp1.value AS PD_PRICE_OFFER,
	        cp2.value AS PD_STATUS,
	        cp3.value AS PD_CONDITION,
	        cp4.value AS PD_TRADE_METHOD,
	        cp5.value AS PD_SAFE_TRADE,
	        p.PD_REG_DATE,
	        p.PD_UPDATED_DATE,
	        p.PD_READCOUNT,
	        p.PD_TEMP_SAVE,
	        p.PD_TAG1,
	        p.PD_TAG2,
	        p.PD_TAG3,
	        p.PD_TAG4,
	        p.PD_TAG5,
	        i.image1,
	        i.image2,
	        i.image3,
	        i.image4,
	        i.image5,
	        c.value AS 'PD_STATUS_VALUE',
	        CASE
		        WHEN PD_STATUS = 'PDS01' THEN 'non_overlay'
		        WHEN PD_STATUS = 'PDS02' THEN 'overlay'
		        WHEN PD_STATUS = 'PDS03' THEN 'overlay' 
		    END AS PD_STATUS_COLOR -- 수정 필요
	    FROM 
	        product p
	    JOIN 
	    	common c ON p.PD_STATUS = c.code    
	    	
	    LEFT JOIN 
	        common cp1 ON p.PD_PRICE_OFFER = cp1.code AND cp1.name = 'PD_PRICE_OFFER'
	    LEFT JOIN 
	        common cp2 ON p.PD_STATUS = cp2.code AND cp2.name = 'PD_STATUS'
	    LEFT JOIN 
	        common cp3 ON p.PD_CONDITION = cp3.code AND cp3.name = 'PD_CONDTION'
	    LEFT JOIN 
	        common cp4 ON p.PD_TRADE_METHOD = cp4.code AND cp4.name = 'PD_METHOD'
	    LEFT JOIN 
	        common cp5 ON p.PD_SAFE_TRADE = cp5.code AND cp5.name = 'PD_SAFE_TRADE'
	    LEFT JOIN 
	        images i ON p.PD_IMAGE = i.IMG_IDX
	    LEFT JOIN 
	        category c3 ON p.PD_CATEGORY = c3.CTG_CODE
	    LEFT JOIN 
	        category c2 ON c3.UP_CTG_CODE = c2.CTG_CODE
	    LEFT JOIN 
	        category c1 ON c2.UP_CTG_CODE = c1.CTG_CODE
	    WHERE  
<!-- 	     1=1 -->
			(PD_STATUS = 'PDS01' OR PD_STATUS = 'PDS02' OR PD_STATUS = 'PDS03' )
       		
	        <if test="params.cate1 != null and params.cate1 != ''">
	            AND c1.CTG_CODE = #{params.cate1}
	        </if>
	        
	        <if test="params.cate2 != null and params.cate2 != ''">
	            AND c2.CTG_CODE = #{params.cate2}
	        </if>
	        
	        <if test="params.cate3 != null and params.cate3 != ''">
	            AND c3.CTG_CODE = #{params.cate3}
	        </if>
	        
	        <if test="params.range != 0">
	        	<![CDATA[
	        	AND ST_Distance_Sphere(
			        	POINT (
			        		  (SELECT US_LNG FROM user WHERE US_ID = #{params.US_ID}), 
			                  (SELECT US_LAT FROM user WHERE US_ID = #{params.US_ID})
			            ),
			        	POINT(p.PD_LNG, p.PD_LAT)
			        ) < #{params.range}
			    ]]>    
	        </if>
	    ORDER BY 
			<choose>
				<when test="params.filter == 'popular'">
				    p.PD_READCOUNT DESC
				</when>
				<otherwise>
				    p.PD_UPDATED_DATE DESC
				</otherwise>
			</choose>
	    LIMIT #{params.startRow}, #{params.listLimit}
	</select>
		
	
	<insert id="insertWishList">
        INSERT INTO wish_list
        VALUES (
        	  NULL
       		  , #{WL_US_ID}
       	 	  , #{productId}
       	 	  )
    </insert>
	
	<select id="selectWishList" resultType="String">
		select CASE WHEN count(*) = 0 THEN 'false'
								      ELSE 'true' END AS wish_yn
		from wish_list 
		where WL_US_ID = #{WL_US_ID} 
		AND WL_PD_IDX = #{productId}
	</select>	 
	
	<delete id="deleteWishList" > 
		DELETE FROM wish_list
		WHERE WL_US_ID = #{WL_US_ID}
		AND WL_PD_IDX = #{productId}
	</delete>
	
	
</mapper>















